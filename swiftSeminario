
// DICCIONARIO Y ARRAY
var lc = ["huevos", "agua", "tomates", "pan"]
print (lc[0])
lc[0] = "botella"
print (lc[0])


var trabajos = [
        "tu": "capitan",
        "el": "mecanico"
]
trabajos["yi"] = "yii"
print (trabajos["tu"])
print (trabajos["el"])

let arrayVacio = [String]()
let diccionarioVacio = [String: Float]()
lc = []
trabajos = [:]


// TUPLAS
let http404Error = (404, "not found")
print (http404Error.0)
print (http404Error.1)

let (code, status) = http404Error
print (http404Error)
print ((code,status))

// FOR

let pI = [73, 43, 103, 87, 12]

var pE = 0
for p in pI
{
    if p > 50 
    {
        pE += 3
    }
    else 
    {
        pE += 1
    }
}

print (pE)



// OPCIONALES

var op1: String? = "hola"
print (op1 == nil)

var op2: String? = nil
var saludo = "hello"
if let nombre = op2
{
    saludo = "Hola, \(nombre)"
}
print (saludo)


let nombrePila: String? = nil
let nombreCompleto: String = "john"
let saludo2 = "hola, \(nombrePila ?? nombreCompleto)"
print (saludo2)



// SWITCH
let verdura = "pimiento"
switch verdura {
    case "zanahoria":
        print("Buena para la vista.")
    case "lechuga", "tomates":
        print("PodrÃ­as hacer una buena ensalada.")
    default:
        print("Siempre puedes hacer una buena sopa.")
}


// FOR-IN CON DICCIONARIO

let interesantes = [
    "Primos": [2, 3, 5, 7, 11, 13],
    "Fibonacci": [1, 1, 2, 3, 5, 8],
    "Cuadrados": [1, 4, 9, 16, 25],
]

var mayor = 0
var mayorClase = ""
for (clase, numeros) in interesantes
{
    for numero in numeros
    {
        if numero > mayor
        {
            mayor = numero
            
            if clase != mayorClase 
            {
                mayorClase = clase
            }
        }
    }
}
print (mayor)
print (mayorClase)


// WHILE
var n = 2
while n < 100 {
    n *= 2
}
print (n)

var m = 2
repeat {
    m *= 2
} while m < 100
print (m)


// RANGOS EN UN BUCLE FOR
var total = 0
for i in 0...4-1 
{
    total += 1
}
print (total)


func saluda (nombre: String, dia: String) ->String 
{
    return "hola  \(nombre), dia \(dia)"
}
print (saluda(nombre: "yi", dia: "martes"))


func suma (numeros: Int...) -> Int
{
    var suma = 0
    for num in numeros
    {
        suma += num
    }
    
    return suma / numeros.count
}

print (suma(numeros: 42,597,12))



// ANIDAR FUNCIONES
func devuelve () -> Int 
{
    var y = 10
    
    func suma () 
    {
        y += 5
    }
    
    suma()
    return y
}
print (devuelve())



// FUNCIONES COMO TIPO DE PRIMERA CLASE
func incrementador () -> ((Int) -> Int)
{
    func sumaUno (numero: Int) -> Int
    {
        return 1 + numero
    }
    return sumaUno
}
var incrementa = incrementador()
print (incrementa(7))


class Figura
{
    var _numLados = 0
    var _nombre: String
    
    init (n: String)
    {
        _nombre = n
    }
    
    deinit
    {
        _numLados = 0
        _nombre = ""
    }
    
    func descripcion () -> String
    {
        var salida: String =
        "lados: \(_numLados) \nnombre: \(_nombre)"
        
        return salida
    }
}

//var figura = Figura(l: 23, n: "yo")
//print (figura.descripcion())


class Cuadrado: Figura 
{
    var _longLado: Double
    
    init (lado: Double, nombre: String)
    {
        _longLado = lado
        super.init (n: nombre)
    }
    
    func area() -> Double
    {
        return _longLado * _longLado
    }
    
    override
    func descripcion () -> String
    {
        return "cuadrado de lado \(_longLado)"
    }
}

let cuadrado = Cuadrado (lado: 5, nombre: "siempre")
print (cuadrado.descripcion())
print ("area \(cuadrado.area())")
